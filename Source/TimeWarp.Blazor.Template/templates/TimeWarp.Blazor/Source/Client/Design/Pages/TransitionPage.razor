// The ontransitionend event does not work in Blazor yet
// We need to use JSInoke to do this.
// The following is a good example https://github.com/dazinator/BlazorDeferredRemove

@namespace TimeWarp.Blazor.Design
@page "/Design/Transitions"

<VStack>
  <Box class=@CssBuilder>123</Box>
  <Button @onclick=OnClickHandler>Toggle</Button>
</VStack>

@code
{
  private const string RouteTemplate = "/Design/Transitions";
  public static string GetRoute() => RouteTemplate;

  private CssBuilder CssBuilder;
  private bool Toggle;

  public TransitionPage()
  {
    CssBuilder = new CssBuilder(BaseClasses);
  }

  private void OnClickHandler()
  {
    Console.WriteLine("Handle Click");
    Toggle = !Toggle;
    if (Toggle)
    {
      CssBuilder = CssBuilder.Empty().AddClass(TrueClasses).AddClass(EnterClasses);
      Console.WriteLine($"CssBuilder:{CssBuilder}");
    }
    else
    {
      CssBuilder = CssBuilder.Empty().AddClass(FalseClasses);
      Console.WriteLine($"CssBuilder:{CssBuilder}");
    }
    StateHasChanged();
  }

  private string BaseClasses = "mt-4 mx-auto w-10 h-10 bg-red-100 hover:bg-red-500";
  private string FalseClasses = "mt-4 mx-auto w-10 h-10 bg-red-100";
  private string TrueClasses = "mt-4 mx-auto w-10 h-10 bg-green-500";


  private string EnterClasses = "transition ease-out duration-100";
  // private string EnterFromClasses = "transition ease-out duration-100";
  //private string EnterToClasses = "transform opacity-100 scale-100";
  //private string LeaveClasses = "transition ease-in duration-75";
  //private string LeaveFromClasses = "transform opacity-100 scale-100";
  //private string LeaveToClasses = "transform opacity-0 scale-95";


  private TransitionState State { get; set; } = TransitionState.Closed;

  private void TransitionEndHandler()
  {
    Console.WriteLine("TransitionEndHandler");
    if (State == TransitionState.Entering) State = TransitionState.Open;
    if (State == TransitionState.Leaving) State = TransitionState.Closed;
  }

  public enum TransitionState
  {
    Entering,
    Open,
    Leaving,
    Closed
  }
}

@namespace TimeWarp.Architecture.Pages

@using TimeWarp.Architecture.Features
@using TimeWarp.Architecture.Components
@using TimeWarp.Architecture.Features.Counters.Components
@using TimeWarp.Architecture.Features.EventStreams

@inherits BaseComponent

@attribute [Route(CounterPage.RouteTemplate)]

<PageTitle>Counter Page</PageTitle>

<Page>
  <HeaderContent>Counter Page</HeaderContent>
  <MainContent>
    <Heading class="text-2xl font-bold leading-tight text-gray-900">Counter Display 1</Heading>
    <Counter TestId="Counter1" />

    <hr class="mt-4" />
    <Heading class="mt-4 text-2xl font-bold leading-tight text-gray-900">Counter Display 2</Heading>
    <Counter TestId="Counter2" />

    <hr class="mt-4" />
    <Text class="mt-4 block">Reset button will clear all state in the Store and return you to the home page</Text>
    <Button id="@Id" data-qa="@TestId" @onclick=ResetButtonClick>Reset Store</Button>

    <hr class="mt-4" />
    <Text class="mt-4 block">Click below to send a Change Route Request that should take back to home page.</Text>
    <Button Variant=Button.ButtonVariant.Default data-qa="ChangeRoute" @onclick=ButtonClick>Change Route to Home</Button>

    <hr class="mt-4" />
    <Text class="mt-4 block">Click below to send a IncrementCountAction via JsInterop.</Text>
    <Button class="" data-qa="JsInterop" onclick="window.DispatchIncrementCountAction()">
      Increment Count by 7 via JavaScript Interop
    </Button>

    <hr class="mt-4" />
    <Heading class="mt-4 text-2xl font-bold leading-tight text-gray-900">Event Stream</Heading>
    <SimpleAlert class="mt-2">EventStream is an example of middleware.  It adds each action to a list.</SimpleAlert>
    <EventStream />
  </MainContent>
</Page>

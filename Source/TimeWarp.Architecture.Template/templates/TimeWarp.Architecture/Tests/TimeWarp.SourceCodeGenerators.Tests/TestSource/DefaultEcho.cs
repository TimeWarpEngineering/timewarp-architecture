#nullable enable
namespace TimeWarp.SourceCodeGenerators.Tests.TestSource;

using System.Collections.Generic;
using TimeWarp.Fixie;
using TimeWarp.SourceCodeGenerators.Tests.TestSource.Echo;


/// <summary>
/// This class isn't used for anything other than to see how the Roslyn Analzyer generates the interface implementation
/// 
/// </summary>
[NotTest]
internal class DefaultEcho : IEcho
{
  public IEcho MyEchoProperty { get; set; }
  public DefaultEcho()
  {
    MyEchoProperty = null!;
  }
  #region generated
  // This region was all generated by using analyzer "Implement interface through"
  public int MyProperty { get => MyEchoProperty.MyProperty; set => MyEchoProperty.MyProperty = value; }

  public int MyGetOnlyProperty => MyEchoProperty.MyGetOnlyProperty;

  public int MySetOnlyProperty { set => MyEchoProperty.MySetOnlyProperty = value; }

  public string Echo(string message, List<string> emotions) => MyEchoProperty.Echo(message, emotions);
  public string Method1(int aInt = 10) => MyEchoProperty.Method1(aInt);
  public string Method3(string aString, object? aObject = null) => MyEchoProperty.Method3(aString, aObject);
  #endregion generated
}

<Project>
  <!-- Set common properties regarding assembly information and nuget packages -->

  <PropertyGroup>
    <Authors>Steven T. Cramer</Authors>
    <Company>TimeWarp Enterprises</Company>
    <Product>TimeWarp.Architecture</Product>
  </PropertyGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <EnablePreviewFeatures>true</EnablePreviewFeatures>
    <GenerateRequiresPreviewFeaturesAttribute>true</GenerateRequiresPreviewFeaturesAttribute>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>preview</LangVersion>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <Nullable>disable</Nullable>
    <TargetFramework>net8.0</TargetFramework>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>


  <!-- Complier Generated files https://andrewlock.net/creating-a-source-generator-part-6-saving-source-generator-output-in-source-control/ -->
  <PropertyGroup>
    <!-- Persist the source generator (and other) files to disk -->
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <!-- ðŸ‘‡ The "base" path for the source generators -->
    <GeneratedFolder>$(MSBuildProjectDirectory)\Generated</GeneratedFolder>
    <!-- ðŸ‘‡ Write the output for each target framework to a different sub-folder -->
    <CompilerGeneratedFilesOutputPath>$(GeneratedFolder)\$(TargetFramework)</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>

  <Target Name="EmbedLocal" BeforeTargets="PrepareForBuild">
    <!-- Include each file with given extension from None collection to EmbeddedResource-->
    <ItemGroup>
      <EmbeddedResource Include="@(None -> WithMetadataValue('Extension', '.scriban'))" />
      <EmbeddedResource Include="@(None -> WithMetadataValue('Extension', '.cstemplate'))" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <PackageReference Include="GlobalUsingsAnalyzer" >
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!--This is to add the CommitDate and CommitHash to your assemblyinfo -->

  <PropertyGroup>
    <GitHeadSha>Not found</GitHeadSha>
    <DotGitDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory).git'))</DotGitDir>
    <HeadFileContent Condition="Exists('$(DotGitDir)/HEAD')">$([System.IO.File]::ReadAllText('$(DotGitDir)/HEAD').Trim())</HeadFileContent>
    <RefPath Condition="$(HeadFileContent.StartsWith('ref: '))">$(DotGitDir)/$(HeadFileContent.Substring(5))</RefPath>
    <GitHeadSha Condition="'$(RefPath)' != '' AND Exists('$(RefPath)')">$([System.IO.File]::ReadAllText('$(RefPath)').Trim())</GitHeadSha>
    <GitHeadSha Condition="'$(HeadFileContent)' != '' AND '$(RefPath)' == ''">$(HeadFileContent)</GitHeadSha>
  </PropertyGroup>

  <Target Name="SetAssemblyMetaData" BeforeTargets="PreBuildEvent">
    <Exec Command="git log -1 --format=%%ct" ConsoleToMSBuild="true" Condition="'$(OS)' == 'Windows_NT'">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitTimestamp"/>
    </Exec>
    <Exec Command="git log -1 --format=%ct" ConsoleToMSBuild="true" Condition="'$(OS)' != 'Windows_NT'">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitTimestamp"/>
    </Exec>
    <PropertyGroup>
      <LastCommitDate>$([System.DateTime]::UnixEpoch.AddSeconds($(GitCommitTimestamp)).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssK"))</LastCommitDate>
    </PropertyGroup>
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitHash</_Parameter1>
        <_Parameter2>$(GitHeadSha)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitDate</_Parameter1>
        <_Parameter2>$(LastCommitDate)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
    <!--    <Message Importance="high" Text="OS: $(OS)" />-->
    <!--    <Message Importance="high" Text="CommitDate: $(LastCommitDate)" />-->
        <Message Importance="high" Text="CommitHash: $(GitHeadSha)" />
  </Target>

</Project>

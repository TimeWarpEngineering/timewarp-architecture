{
  "$schema": "http://json.schemastore.org/template",
  "author": "Steven T. Cramer",
  "classifications": [
    "TimeWarp",
    "Web",
    "Blazor",
    "Hosted"
  ],
  "description": "A project template for creating a containerized or monolith solution.",
  "groupIdentity": "TimeWarp.Architecture",
  "identity": "TimeWarp.Architecture.CSharp",
  "name": "TimeWarp Architecture",
  "preferNameDirectory": true,
  "shortName": "timewarp-architecture",
  "sourceName": "TimeWarp.Architecture",
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!process)",
          "exclude": [
            "Process/**/*"
          ]
        },
        {
          "condition": "(!grpc)",
          "exclude": [
            "Source/ContainerApps/Grpc/**/*",
            "Source/ContainerApps/Web/Web.Spa/Features/Superhero/**/*",
            "Tests/Grpc.Server.Integration.Tests/**/*"
          ]
        },
        {
          "condition": "(!api)",
          "exclude": [
            "Source/ContainerApps/Api/**/*",
            "Source/ContainerApps/Web/Web.Spa/Features/WeatherForecast/**/*",
            "Tests/TimeWarp.Testing/Applications/ApiTestServerApplication.cs",
            "Tests/Api.Server.Integration.Tests/**/*"
          ]
        },
        {
          "condition": "(!web)",
          "exclude": [
            "Source/ContainerApps/Web/**/*",
            "Tests/TimeWarp.Testing/Applications/WebTestServerApplication.cs",
            "Tests/TimeWarp.Testing/Applications/SpaTestApplication.cs",
            "Tests/TimeWarp.Testing/Applications/ClientLoaderTestConfiguration.cs",
            "Tests/Web.Server.Integration.Tests/**/*",
            "Tests/Web.Spa.Integration.Tests/**/*",
            "Tests/EndToEnd.TestCafe.Tests/**/*",
            "Tests/EndToEnd.Playwright.Tests/**/*"
          ]
        },
        {
          "condition": "(!yarp)",
          "exclude": [
            "Source/ContainerApps/Yarp/**/*",
            "Tests/TimeWarp.Testing/Applications/YarpTestServerApplication.cs"
          ]
        },
        {
          "condition": "(!cosmosdb)",
          "exclude": [
            "Source/ContainerApps/Web/Web.Infrastructure/Persistence/CosmosDbContext.cs",
            "Source/ContainerApps/Web/Web.Server/Configuration/EnvironmentChecks/CosmosDbEnvironmentCheck.cs",
            "Source/ContainerApps/Web/Web.Server/HostedServices/CosmosDbContextStartupHostedService.cs",
            "Source/ContainerApps/Web/Web.Server/Modules/CosmosDbModule.cs"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "process": {
      "type": "parameter",
      "description": "Include the TimeWarp Process Documents, an editable minimalist process based in markdown documents",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "grpc": {
      "type": "parameter",
      "description": "Include the grpc container app (Superheros)",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "api": {
      "type": "parameter",
      "description": "Include the api container app (Weather)",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "web": {
      "type": "parameter",
      "description": "Include the web container app",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "yarp": {
      "type": "parameter",
      "description": "Include the yarp proxy server",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "cosmosdb": {
      "type": "parameter",
      "description": "Add CosmosDb Features",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "counter": {
      "type": "parameter",
      "description": "Add Counter Features to Web.Spa",
      "datatype": "bool",
      "defaultValue": "true"
    }
  },
  "tags": {
    "language": "C#",
    "type": "project"
  }
}

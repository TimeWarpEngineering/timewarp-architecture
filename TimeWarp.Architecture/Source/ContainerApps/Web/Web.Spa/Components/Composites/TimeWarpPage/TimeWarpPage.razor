@{
  #pragma warning disable FluentMultiSplitter
}
@inherits BaseComponent

@using TimeWarp.Architecture.Components.Composites.TimeWarpPage
@using TimeWarp.Architecture.Components.Composites.TimeWarpPage.RightPane
@using TimeWarp.Architecture.Components.Composites.TimeWarpPage.LeftPane

@code
{
  [Parameter] public RenderFragment? LeftPane_HeaderContent { get; set; }
  [Parameter] public RenderFragment? LeftPane_MainContent { get; set; }
  [Parameter] public RenderFragment? LeftPane_FooterContent { get; set; }
  [Parameter] public RenderFragment? RightPane_HeaderContent { get; set; }
  [Parameter] public RenderFragment? RightPane_FooterContent { get; set; }
  [Parameter] public RenderFragment? PagePane_HeaderContent { get; set; }
  [Parameter] public RenderFragment? PagePane_MainContent { get; set; }
  [Parameter] public RenderFragment? PagePane_FooterContent { get; set; }
  [Parameter] public RenderFragment? AsidePane_HeaderContent { get; set; }
  [Parameter] public RenderFragment? AsidePane_MainContent { get; set; }
  [Parameter] public RenderFragment? AsidePane_FooterContent { get; set; }

  // Control the visibility of Panes and Areas
  [Parameter] public bool ShowLeftPane { get; set; } = true;
  [Parameter] public bool ShowSiteFooter { get; set; } = true;
  [Parameter] public bool ShowPlaceholders { get; set; } = true;

  private FluentMultiSplitter FluentMultiSplitter { get; set; } = null!;
  private FluentMultiSplitterPane? LeftPane { get; set; }

  protected override void OnAfterRender(bool firstRender)
  {
    base.OnAfterRender(firstRender);
    if (firstRender)
    {
      if (LeftPane == null) return;

      if (!ShowLeftPane)
      {
        FluentMultiSplitter.RemovePane(LeftPane);
      }
    }
  }
}

<CascadingValue Value=1>

<CascadingValue Value="this">
  <FluentMultiSplitter ref=FluentMultiSplitter Class="timewarp-page" Height="100vh">
    <FluentMultiSplitterPane ref=LeftPane Size="20%" Min="275px" Max="70%" Collapsible=ShowLeftPane Collapsed=@(!ShowLeftPane)>
      <LeftPane />
    </FluentMultiSplitterPane>
    <FluentMultiSplitterPane Size="80%">
      <RightPane />
    </FluentMultiSplitterPane>
  </FluentMultiSplitter>
</CascadingValue>
</CascadingValue>

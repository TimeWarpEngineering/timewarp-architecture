<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <Description>TimeWarp Architecture Demo Application</Description>
    <DefineConstants>ReduxDevToolsEnabled;grpc;api;web;counter</DefineConstants>
    <Nullable>enable</Nullable>
    <!--<ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>-->
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <!-- Uncomment the following line if you want to Mock B2C.
     Note you will need to run all Mock Data if you do
     because the token won't work on the real API -->
    <DefineConstants>$(DefineConstants);MOCK_AUTHENTICATION</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Ardalis.GuardClauses" />
    <PackageReference Include="BlazorComponentUtilities"/>
    <PackageReference Include="Grpc.Net.Client"/>
    <PackageReference Include="Grpc.Net.Client.Web"/>
    <PackageReference Include="Microsoft.AspNetCore.Components.QuickGrid" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly"/>
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Authentication"/>
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" PrivateAssets="all"/>
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Client"/>
    <PackageReference Include="Microsoft.Authentication.WebAssembly.Msal" />
    <PackageReference Include="Microsoft.Extensions.Http"/>
    <PackageReference Include="Microsoft.Extensions.Logging.Configuration"/>
    <PackageReference Include="Microsoft.FluentUI.AspNetCore.Components"/>
    <PackageReference Include="Microsoft.FluentUI.AspNetCore.Components.Emoji"/>
    <PackageReference Include="Microsoft.FluentUI.AspNetCore.Components.Icons"/>
    <PackageReference Include="Microsoft.TypeScript.MSBuild">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Morris.Blazor.ControlFlow"/>
    <PackageReference Include="Morris.Blazor.FluentValidation"/>
    <PackageReference Include="Morris.Moxy" PrivateAssets="all" GeneratePathProperty="true"/>
    <PackageReference Include="Passwordless" />
    <PackageReference Include="System.Net.Http.Json" PrivateAssets="all"/>
    <PackageReference Include="TimeWarp.State" />
    <PackageReference Include="TimeWarp.State.Plus"/>
    <PackageReference Include="Timewarp.OptionsValidation"/>
    <PackageReference Include="protobuf-net.Grpc"/>
    <PackageReference Include="timewarp-heroicons"/>
    <PackageReference Include="timewarp-simple-icons"/>
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="**/*.md" />
  </ItemGroup>
  
  <ItemGroup>
    <!--#if(api)-->
    <ProjectReference Include="..\..\..\..\..\..\timewarp-source-generators\source\TimeWarp.SourceGenerators\TimeWarp.SourceGenerators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\..\..\Analyzers\TimeWarp.Architecture.Analyzers\TimeWarp.Architecture.Analyzers.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />
    <ProjectReference Include="..\..\Api\Api.Contracts\Api.Contracts.csproj"/>
    <!--#endif-->
    <!--#if(grpc)-->
    <ProjectReference Include="..\..\Grpc\Grpc.Contracts\Grpc.Contracts.csproj"/>
    <!--#endif-->
    <ProjectReference Include="..\Web.Contracts\Web.Contracts.csproj"/>
  </ItemGroup>
  
  <ItemGroup>
    <InternalsVisibleTo Include="Web.Spa.Integration.Tests"/>
    <InternalsVisibleTo Include="Web.Server.Integration.Tests"/>
  </ItemGroup>

  <ItemGroup>
    <!--<ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />-->
    <Folder Include="Components\Editors\"/>
    <Folder Include="Features\Admin\" />
  </ItemGroup>

  <ItemGroup>
    <UpToDateCheckBuilt Include="Styles/input.css" Set="Css" />
    <UpToDateCheckBuilt Include="tailwind.config.js" Set="Css" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptInputs Include="source\*.*"/>
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="Features\Account\Pages\LoginPage\RegisterPasskey.razor" />
    <AdditionalFiles Include="Features\Base\StateAccessMixin.mixin"/>
    <AdditionalFiles Include="Mixins\Page.mixin"/>
  </ItemGroup>

  <!-- Target to copy scoped CSS to a more accessible location -->
  <Target Name="CopyScopedCss" AfterTargets="Build">
    <Copy SourceFiles="$(ProjectDir)obj\$(ConfigurationName)\$(TargetFramework)\scopedcss\bundle\$(ProjectName).styles.css"
          DestinationFolder="$(ProjectDir)obj\css\"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="Tailwind" AfterTargets="Build,CopyScopedCss">
    <Exec Command="npm install" />
    <Exec Command="npm run prettier" />
    <Exec Command="npm run lint" />
    <Exec Command="npm run build" />
    <Exec Command="npm run css:build" />
  </Target>

  <Target Name="CreateDummyFluentUICSS" BeforeTargets="Build">
    <ItemGroup>
      <DummyCSSFile Include="$(ProjectDir)obj\css\_content\Microsoft.FluentUI.AspNetCore.Components\Microsoft.FluentUI.AspNetCore.Components.bundle.scp.css" />
    </ItemGroup>
    <MakeDir Directories="$(ProjectDir)obj\css\_content\Microsoft.FluentUI.AspNetCore.Components" />
    <WriteLinesToFile File="@(DummyCSSFile)" Lines="/* Dummy file to satisfy build requirement */" Overwrite="true" />
  </Target>

  <Target Name="CreateDummyQuickGridCSS" BeforeTargets="Build">
    <ItemGroup>
      <DummyQuickGridCSSFile Include="$(ProjectDir)obj\css\_content\Microsoft.AspNetCore.Components.QuickGrid\Microsoft.AspNetCore.Components.QuickGrid.bundle.scp.css" />
    </ItemGroup>
    <MakeDir Directories="$(ProjectDir)obj\css\_content\Microsoft.AspNetCore.Components.QuickGrid" />
    <WriteLinesToFile File="@(DummyQuickGridCSSFile)" Lines="/* Dummy file to satisfy build requirement */" Overwrite="true" />
  </Target>
</Project>

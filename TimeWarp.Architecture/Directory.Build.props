<Project>
  <!-- Set common properties regarding assembly information and nuget packages -->

  <PropertyGroup>
    <Authors>Steven T. Cramer</Authors>
    <Company>TimeWarp Enterprises</Company>
    <Product>TimeWarp.Architecture</Product>
    <RepositoryUrl>https://github.com/TimeWarpEngineering/timewarp-architecture.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <Version>0.0.1</Version>
  </PropertyGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <EnablePreviewFeatures>true</EnablePreviewFeatures>
<!--    <GenerateRequiresPreviewFeaturesAttribute>true</GenerateRequiresPreviewFeaturesAttribute>-->
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>latest</LangVersion>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <Nullable>disable</Nullable>
    <TargetFramework>net9.0</TargetFramework>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Compiler Generated files https://andrewlock.net/creating-a-source-generator-part-6-saving-source-generator-output-in-source-control/ -->
  <PropertyGroup>
    <!-- Persist the source generator (and other) files to disk -->
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <!-- ðŸ‘‡ The "base" path for the source generators -->
    <GeneratedFolder>$(MSBuildProjectDirectory)\Generated</GeneratedFolder>
    <!-- ðŸ‘‡ Write the output for each target framework to a different sub-folder -->
    <CompilerGeneratedFilesOutputPath>$(GeneratedFolder)\$(TargetFramework)</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>

  <Target Name="EmbedLocal" BeforeTargets="PrepareForBuild">
    <!-- Include each file with given extension from None collection to EmbeddedResource-->
    <ItemGroup>
      <EmbeddedResource Include="@(None -> WithMetadataValue('Extension', '.scriban'))" />
      <EmbeddedResource Include="@(None -> WithMetadataValue('Extension', '.cstemplate'))" />
    </ItemGroup>
  </Target>


  <ItemGroup>
    <!--  https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0130-->
    <CompilerVisibleProperty Include="RootNamespace" />
    <CompilerVisibleProperty Include="ProjectDir" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="GlobalUsingsAnalyzer">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Add git commit date to assembly metadata -->
  <PropertyGroup>
    <GitCheckCommand>git rev-parse --is-inside-work-tree</GitCheckCommand>
    <GitLogCommand>git log -1 --format=%%cI</GitLogCommand>
  </PropertyGroup>

  <Target Name="SetAssemblyMetaData" BeforeTargets="PreBuildEvent">
    <!-- Check if inside a Git repository -->
    <Exec Command="$(GitCheckCommand)" IgnoreExitCode="true" StandardOutputImportance="Low" StandardErrorImportance="Low">
      <Output TaskParameter="ExitCode" PropertyName="GitInRepo" />
    </Exec>
    <PropertyGroup Condition="'$(GitInRepo)' == '0'">
      <GitRepoAvailable>true</GitRepoAvailable>
    </PropertyGroup>
    <PropertyGroup Condition="'$(GitInRepo)' != '0'">
      <GitRepoAvailable>false</GitRepoAvailable>
    </PropertyGroup>

    <!-- Get formatted commit date directly from git -->
    <Exec Command="$(GitLogCommand)" ConsoleToMSBuild="true" Condition="'$(GitRepoAvailable)' == 'true'" StandardOutputImportance="Low" StandardErrorImportance="Low">
      <Output TaskParameter="ConsoleOutput" PropertyName="LastCommitDate"/>
    </Exec>
    <ItemGroup Condition="'$(GitRepoAvailable)' == 'true'">
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitDate</_Parameter1>
        <_Parameter2>$(LastCommitDate)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>


</Project>
